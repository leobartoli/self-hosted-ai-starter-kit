{
  "name": "Agente IA - Paesaggio",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -976,
        512
      ],
      "id": "ddf86cc9-0635-470e-ac84-bcc95c33706c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "jsCode": "// Leggi sia la domanda che la risposta dal nodo precedente.\nconst questionText = items[0]?.json?.domanda;\nconst answerText = items[0]?.json?.risposta;\n\n// Aggiungi un controllo di sicurezza per entrambi i campi.\nif (!questionText || !answerText) {\n  return [{\n    json: {\n      error: 'I campi \"domanda\" o \"risposta\" non sono presenti o sono vuoti nei dati del nodo precedente.'\n    }\n  }];\n}\n\n// Funzione che formatta un singolo blocco di testo in HTML.\nfunction formatTextToHtml(text) {\n  let formattedText = text;\n\n  // Sostituisce i titoli di livello 2 (es. \"## Titolo\") con tag H2.\n  formattedText = formattedText.replace(/##\\s*(.*)/g, '<h2>$1</h2>');\n\n  // Sostituisce i titoli di livello 3 (es. \"### Titolo\") con tag H3.\n  formattedText = formattedText.replace(/###\\s*(.*)/g, '<h3>$1</h3>');\n\n  // Sostituisce gli elenchi puntati con tag <ul> e <li>.\n  formattedText = formattedText.replace(/^\\*\\s*(.*)/gm, '<li>$1</li>');\n  formattedText = formattedText.replace(/(<li>.*<\\/li>)/s, '<ul>$1</ul>');\n\n  // Aggiunge tag di grassetto per i termini importanti.\n  formattedText = formattedText.replace(/\\*\\*(.*?)\\*\\*/g, '<b>$1</b>');\n  \n  // Sostituisce i doppi a capo con paragrafi per il resto del testo.\n  formattedText = formattedText.replace(/\\n\\n/g, '</p><p>');\n\n  return `<p>${formattedText}</p>`;\n}\n\n// Applica la formattazione sia alla domanda che alla risposta.\nconst formattedQuestion = formatTextToHtml(questionText);\nconst formattedAnswer = formatTextToHtml(answerText);\n\n// Combina i due blocchi formattati in un'unica stringa HTML completa.\nconst finalHtmlOutput = `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    ${formattedQuestion}\n    ${formattedAnswer}\n  </body>\n  </html>\n`;\n\n// Restituisci l'output finale.\nreturn [{\n  json: {\n    formattedHtml: finalHtmlOutput\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        80
      ],
      "id": "c1e4dfbb-7527-451f-a9bb-ff4c62c7c78f",
      "name": "Formattazione1"
    },
    {
      "parameters": {
        "model": "mistral-small:24b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -112,
        304
      ],
      "id": "0e21c346-aaf5-4ba9-ad3f-4d5870454651",
      "name": "Ollama Chat Model1",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "model": "mistral-small:24b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -464,
        192
      ],
      "id": "61b36481-adb1-4a23-a030-92e3b27de9e8",
      "name": "Ollama Chat Model9",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "Risposta agente AI - Domanda paesaggio",
        "html": "={{ $json.formattedHtml }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        624,
        80
      ],
      "id": "0a794afb-4a99-4a83-a37a-d7432a727400",
      "name": "email risposta",
      "webhookId": "611734cd-ba60-4b56-92f8-98053c666a8c",
      "credentials": {
        "smtp": {
          "id": "REwMrDeHhgcQLIT6",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un proprietario di immobili all'interno del comune di Magliano in Toscana. Descrivi in maniera dettagliata un intervento edilizio su area sottoposta a vincolo paesaggistico che intenderesti realizzare e richiedi se per poter procedere è necessario il rilascio dell'autorizzazione paesaggistica,\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -528,
        -32
      ],
      "id": "4b152d2a-9951-4f9c-847c-40ea72b1aa26",
      "name": "Domande1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un esperto di vincolo paesaggistico del comune di Magliano in Toscana. Leggi la domanda {{ $json.output }}. Rispondi in modo estremamente elaborato, come di seguito descritto, mantenendo SEMPRE QUESTA STRUTTURA:\n\n## Domanda dell'Utente (chiarischi la domanda senza riassumerla)\n\n## Risposta dell'agente AI\n### Inquadramento paesaggistico dell'intervento\n\n## Conclusioni (Autorizzazione Paesaggistica necessaria o non necessaria)\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -176,
        80
      ],
      "id": "cac7c272-b27a-4b4e-ac53-95eafb8f2983",
      "name": "Risposte1"
    },
    {
      "parameters": {
        "jsCode": "// Leggi il testo dal nodo precedente, assumendo che sia nel campo 'output'.\n// L'operatore '?' previene errori se il dato non è presente.\nconst fullText = items[0]?.json?.output;\n\n// Definisci i marcatori per separare domanda e risposta.\nconst questionMarker = \"## Domanda dell'Utente\";\nconst answerMarker = \"## Risposta dell'agente AI\";\n\nlet output = {};\n// Genera un ID univoco per la domanda/risposta\nconst uniqueId = Date.now();\n\nif (fullText) {\n  // Trova gli indici dei marcatori nel testo.\n  const questionStartIndex = fullText.indexOf(questionMarker);\n  const answerStartIndex = fullText.indexOf(answerMarker);\n\n  if (questionStartIndex !== -1 && answerStartIndex !== -1) {\n    // Estrai il testo della domanda.\n    const rawQuestion = fullText.substring(questionStartIndex, answerStartIndex);\n    \n    // Estrai il testo della risposta.\n    const rawAnswer = fullText.substring(answerStartIndex);\n\n    output = {\n      id: uniqueId,\n      domanda: rawQuestion.trim(),\n      risposta: rawAnswer.trim()\n    };\n  } else {\n    output = {\n      error: \"Impossibile trovare i marcatori di domanda e risposta nel testo. Controlla il formato del testo in ingresso.\"\n    };\n  }\n} else {\n  output = {\n    error: \"Il campo 'output' non contiene testo valido o non è presente.\"\n  };\n}\n\n// Restituisci l'oggetto JSON con la domanda e la risposta separate.\nreturn [{ json: output }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        176,
        80
      ],
      "id": "86f59e5b-c8ec-488f-b431-6089360ba5bb",
      "name": "Code1"
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "Domanda agente AI - Domanda paesaggio",
        "html": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -400,
        512
      ],
      "id": "0dadf81e-3b0d-4d36-a924-88ca8fffdef1",
      "name": "email risposta1",
      "webhookId": "611734cd-ba60-4b56-92f8-98053c666a8c",
      "credentials": {
        "smtp": {
          "id": "REwMrDeHhgcQLIT6",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "model": "mistral-small:24b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -688,
        736
      ],
      "id": "5eb68860-57c8-4c5c-93b1-02eba5b2cb40",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un proprietario di immobili all'interno del comune di Magliano in Toscana e sottoposti a vincolo paesaggistico. Descrivi un intervento edilizio che intenderesti realizzare e richiedi se è necessario il rilascio dell'autorizzazione paesaggistica per poter procedere.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -752,
        512
      ],
      "id": "0b95a9af-70c6-409c-963f-049dfc2581a7",
      "name": "Domande"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2.1,
      "position": [
        -976,
        80
      ],
      "id": "0e229104-ffd5-4801-8657-8848382a01fb",
      "name": "Email Trigger (IMAP)",
      "credentials": {
        "imap": {
          "id": "n87IbCW493O8Enyy",
          "name": "IMAP account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "52d66140-a4a6-4661-bb9f-1ad19d3488c1",
              "leftValue": "={{ $json.subject }}",
              "rightValue": "Domanda agente AI - Domanda paesaggio",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -752,
        80
      ],
      "id": "000fc2ee-5801-4710-afb1-9f60b54b0b3e",
      "name": "If"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Domande",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formattazione1": {
      "main": [
        [
          {
            "node": "email risposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Risposte1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "Domande1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Domande1": {
      "main": [
        [
          {
            "node": "Risposte1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Risposte1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Formattazione1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Domande",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Domande": {
      "main": [
        [
          {
            "node": "email risposta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Domande1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4416c5d8-0571-47ba-8bd0-006c41a0f612",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "17a62beb685cc8811ecccfdb526b06b45c844927e932786974e7e038d3390ffd"
  },
  "id": "NgU6lKmMhKGwetv0",
  "tags": []
}