{
  "name": "TOTALE_13",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Code node to merge protocol number with AI output\nconst protocolData = $input.item.json; // From \"Generazione protocollo\"\nconst aiOutput = $('Inserimento richieste').item.json.output;\n\n// Parse the AI output if it's JSON\nlet parsedOutput;\ntry {\n  const cleanOutput = aiOutput.replace(/```json\\s*/, '').replace(/```\\s*$/, '').trim();\n  parsedOutput = JSON.parse(cleanOutput);\n} catch (error) {\n  // If parsing fails, create a basic structure\n  parsedOutput = {\n    output: aiOutput\n  };\n}\n\n// Add the protocol number to the parsed output\nparsedOutput.numero_protocollo = protocolData.numero_protocollo;\n\n// Return the merged data\nreturn {\n  json: {\n    ai_output: aiOutput,\n    numero_protocollo: protocolData.numero_protocollo,\n    ...parsedOutput\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4640,
        320
      ],
      "id": "c1f57e5d-8620-47ea-904b-a396f7ef7c32",
      "name": "Merge Protocol Data"
    },
    {
      "parameters": {
        "jsCode": "// Code node to merge protocol number with AI output for Qdrant\nconst protocolData = $input.item.json; // From \"Generazione protocollo\"\nconst aiOutput = $('Inserimento richieste').item.json.output;\n\n// Parse the AI output if it's JSON\nlet parsedOutput;\ntry {\n  const cleanOutput = aiOutput.replace(/```json\\s*/, '').replace(/```\\s*$/, '').trim();\n  parsedOutput = JSON.parse(cleanOutput);\n} catch (error) {\n  // If parsing fails, create a basic structure\n  parsedOutput = {\n    output: aiOutput,\n    oggetto: 'Segnalazione generica',\n    descrizione: aiOutput,\n    risposta_cittadino: 'Risposta standard',\n    nome: 'Non specificato',\n    cognome: 'Non specificato',\n    telefono: 'Non fornito',\n    email: 'non.fornita@comune.maglianointoscana.gr.it',\n    indirizzo: 'Da definire',\n    canale: 'Telefono',\n    data: new Date().toISOString().split('T')[0],\n    tipologia: 'Lavori Pubblici',\n    urgenza: 'Media',\n    dati_catastali: null,\n    ufficio_competente: 'Lavori Pubblici',\n    priorita: 'Media',\n    telefono_ufficio: '0564 593439',\n    email_ufficio: 'tecnico@comune.maglianointoscana.gr.it',\n    tempi_gestione: '5-7 giorni lavorativi',\n    documenti_richiesti: 'Da verificare',\n    note_interne: 'Segnalazione creata automaticamente, dati da verificare.'\n  };\n}\n\n// Add the protocol number to the parsed output\nparsedOutput.numero_protocollo = protocolData.numero_protocollo;\n\n// Update risposta_cittadino with correct protocol number if it exists\nif (parsedOutput.risposta_cittadino && parsedOutput.risposta_cittadino.includes('MAGL-')) {\n  const today = new Date().toISOString().split('T')[0];\n  parsedOutput.risposta_cittadino = `Gentile Cittadino/a, confermiamo la ricezione della segnalazione del ${today}. La pratica è stata assegnata all'ufficio ${parsedOutput.ufficio_competente || 'Lavori Pubblici'} con numero di protocollo ${protocolData.numero_protocollo}. Contatteremo per completare i dati mancanti. Per informazioni: 0564 593439 negli orari Lunedì-Mercoledì 9:00-12:00, Martedì-Giovedì 16:00-17:00. Cordiali saluti, Comune di Magliano in Toscana`;\n}\n\n// Return the merged data for Qdrant processing\nreturn {\n  json: {\n    output: parsedOutput,\n    numero_protocollo: protocolData.numero_protocollo,\n    ...parsedOutput\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4640,
        16
      ],
      "id": "3614e08f-0641-4e26-ae5c-e2b8ea046e41",
      "name": "Merge Protocol Data for Qdrant"
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -6464,
        96
      ],
      "id": "4c677e79-99f7-422a-933b-4dfc14143ccf",
      "name": "Modello Linguistico1",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Funzione per generare valori di fallback\nfunction generateFallbacks() {\n  const today = new Date().toISOString().split('T')[0];\n  const randomProtocol = Math.floor(1000 + Math.random() * 9000);\n  \n  return {\n    nome: 'Non specificato',\n    cognome: 'Non specificato', \n    telefono: 'Non fornito',\n    email: 'non.fornita@comune.maglianointoscana.gr.it',\n    indirizzo: 'Da definire',\n    canale: 'Telefono',\n    data: today,\n    tipologia: 'Lavori Pubblici',\n    oggetto: 'Segnalazione generica',\n    descrizione: 'Dati incompleti - richiedere integrazione',\n    urgenza: 'Media',\n    dati_catastali: null,\n    ufficio_competente: 'Lavori Pubblici',\n    priorita: 'Media',\n    telefono_ufficio: '0564 593439',\n    email_ufficio: 'tecnico@comune.maglianointoscana.gr.it',\n    tempi_gestione: '5-7 giorni lavorativi',\n    numero_protocollo: 'MAGL-2024-' + randomProtocol,\n    documenti_richiesti: 'Da verificare',\n    risposta_cittadino: `Gentile Cittadino/a, confermiamo la ricezione della segnalazione del ${today}. La pratica è stata assegnata all'ufficio Lavori Pubblici con numero di protocollo MAGL-2024-${randomProtocol}. Contatteremo per completare i dati mancanti. Per informazioni: 0564 593439 negli orari Lunedì-Mercoledì 9:00-12:00, Martedì-Giovedì 16:00-17:00. Cordiali saluti, Comune di Magliano in Toscana`,\n    note_interne: 'Segnalazione creata automaticamente, dati da verificare.'\n  };\n}\n\n// Funzione per pulire e validare i dati\nfunction validateAndClean(data, fallbacks) {\n  const result = { ...fallbacks };\n  \n  for (const [key, value] of Object.entries(data)) {\n    const trimmedValue = (typeof value === 'string') ? value.trim() : value;\n    if (trimmedValue !== null && trimmedValue !== undefined && trimmedValue !== '' && trimmedValue !== 'null' && !['Non specificato', 'Non fornito'].includes(trimmedValue)) {\n      if (key === 'tipologia') {\n        const allowedTypes = ['Lavori Pubblici', 'Patrimonio', 'Edilizia Privata', 'Paesaggistico', 'Ambiente', 'Urbanistica', 'Protezione Civile'];\n        result[key] = allowedTypes.includes(trimmedValue) ? trimmedValue : 'Lavori Pubblici';\n      } else if (key === 'priorita' || key === 'urgenza') {\n        const allowedPriorities = ['Alta', 'Media', 'Bassa'];\n        result[key] = allowedPriorities.includes(trimmedValue) ? trimmedValue : 'Media';\n      } else if (key === 'canale') {\n        const allowedChannels = ['Telefono', 'Email', 'WhatsApp'];\n        result[key] = allowedChannels.includes(trimmedValue) ? trimmedValue : fallbacks.canale;\n      } else if (key === 'data') {\n        const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n        result[key] = dateRegex.test(trimmedValue) ? trimmedValue : fallbacks.data;\n      } else if (key === 'email' && trimmedValue.includes('@')) {\n        result[key] = trimmedValue;\n      } else if (key === 'telefono' && (trimmedValue.includes('-') || trimmedValue.length >= 7)) {\n        result[key] = trimmedValue;\n      } else if (typeof trimmedValue === 'string') {\n        result[key] = trimmedValue;\n      }\n    }\n  }\n  \n  return result;\n}\n\n// MODIFICA PRINCIPALE: Ottenere il numero protocollo dal nodo \"Merge Protocol Data\"\nconst protocolloData = $input.item.json;\nconst numeroProtocollo = protocolloData.numero_protocollo;\n\nlet rawOutput = protocolloData.ai_output || '';\nrawOutput = rawOutput.replace(/```json\\s*/, '').replace(/```\\s*$/, '').trim();\n\nconst fallbacks = generateFallbacks();\n// Sovrascrivi con il numero protocollo generato\nif (numeroProtocollo) {\n  fallbacks.numero_protocollo = numeroProtocollo;\n  // Aggiorna anche la risposta cittadino con il numero corretto\n  const today = new Date().toISOString().split('T')[0];\n  fallbacks.risposta_cittadino = `Gentile Cittadino/a, confermiamo la ricezione della segnalazione del ${today}. La pratica è stata assegnata all'ufficio Lavori Pubblici con numero di protocollo ${numeroProtocollo}. Contatteremo per completare i dati mancanti. Per informazioni: 0564 593439 negli orari Lunedì-Mercoledì 9:00-12:00, Martedì-Giovedì 16:00-17:00. Cordiali saluti, Comune di Magliano in Toscana`;\n}\n\ntry {\n  const parsed = JSON.parse(rawOutput);\n  const validated = validateAndClean(parsed, fallbacks);\n  // Assicura che il numero protocollo sia sempre quello generato\n  validated.numero_protocollo = numeroProtocollo || validated.numero_protocollo;\n  return { json: validated };\n} catch (error) {\n  const jsonMatch = rawOutput.match(/\\{[\\s\\S]*\\}/);\n  if (jsonMatch) {\n    try {\n      const parsed = JSON.parse(jsonMatch[0]);\n      const validated = validateAndClean(parsed, fallbacks);\n      // Assicura che il numero protocollo sia sempre quello generato\n      validated.numero_protocollo = numeroProtocollo || validated.numero_protocollo;\n      return { json: validated };\n    } catch (e) {\n      return { json: { \n        ...fallbacks,\n        descrizione: `Errore parsing: ${rawOutput.substring(0, 200)}...`,\n        oggetto: 'Errore elaborazione dati',\n        numero_protocollo: numeroProtocollo || fallbacks.numero_protocollo\n      }};\n    }\n  }\n  \n  // Assicura che anche nei fallback il numero protocollo sia corretto\n  fallbacks.numero_protocollo = numeroProtocollo || fallbacks.numero_protocollo;\n  return { json: fallbacks };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4416,
        320
      ],
      "id": "0e6923af-c615-4753-8eef-28a88f8d7679",
      "name": "Parse JSON & Valida Dati1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un agente IA per il Comune di Magliano in Toscana. Genera UNA SOLA richiesta casuale tra le seguenti tipologie. Occasionalmente, ometti uno o più campi (es. telefono, email, indirizzo) per simulare dati incompleti. Leggi la memoria per evitare di inserire dati già presenti\n\n**TIPOLOGIE DISPONIBILI:**\n1. **Lavori Pubblici**: strade dissestate, illuminazione pubblica, verde pubblico, segnaletica\n2. **Patrimonio**: edifici comunali, scuole, cimiteri, impianti sportivi\n3. **Edilizia Privata**: richieste permesso costruire, SCIA, CILA, verifiche conformità\n4. **Paesaggistico**: autorizzazioni paesaggistiche, vincoli, alberi monumentali\n5. **Ambiente**: raccolta rifiuti, inquinamento, verde urbano\n6. **Urbanistica**: piani regolatori, zonizzazioni\n7. **Protezione Civile**: emergenze, sicurezza\n\n**GENERA:**\n- Nome e Cognome realistici italiani (diversi ogni volta, caria fra nomi maschili e famminili)\n- Telefono (formato: 3xx-xxxxxxx)\n- Email (nome.cognome@provider.it)\n- Canale: Telefono, Email, o WhatsApp\n- Data odierna (formato YYYY-MM-DD oggi è )\n- Luogo specifico di Magliano in Toscana, Montiano o Pereta o zone aperte\n- Descrizione dettagliata del problema\n- Se Paesaggistico: aggiungi dati catastali (Foglio 1-84, Mappale 1-300)\n\n**ESEMPI LUOGHI:**\n- Via Roma, Via del Corso, Piazza Garibaldi\n- Frazione Pereta, Frazione Montiano, Sant Andrea, Poderoen Cà dei Frati, Cupi\n- Scuola Elementare, Cimiteri Comunali, sede comunale, \n- Parchi Pubblici, Campi Sportivi di Magliano in Toscana, Montiano e Pereta\n- Zome aperte\n\n**FORMATO RISPOSTA:**\nGenera una sola segnalazione dettagliata in linguaggio naturale.\nOggi è il {{ new Date().toLocaleDateString('it-IT') }}\nOre {{ new Date().toLocaleTimeString('it-IT') }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -6480,
        -128
      ],
      "id": "3ca9598e-4823-4098-a46f-479e18700b78",
      "name": "Generatore Segnalazioni"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "=segnalazioni",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nome": "={{ $json.nome }}",
            "cognome": "={{ $json.cognome }}",
            "telefono": "={{ $json.telefono }}",
            "email": "={{ $json.email }}",
            "indirizzo": "={{ $json.indirizzo }}",
            "canale": "={{ $json.canale }}",
            "data": "={{ $json.data }}",
            "tipologia": "={{ $json.tipologia }}",
            "oggetto": "={{ $json.oggetto }}",
            "descrizione": "={{ $json.descrizione }}",
            "urgenza": "={{ $json.urgenza }}",
            "dati_catastali": "={{ $json.dati_catastali }}",
            "ufficio_competente": "={{ $json.ufficio_competente }}",
            "priorita": "={{ $json.priorita }}",
            "telefono_ufficio": "={{ $json.telefono_ufficio }}",
            "email_ufficio": "={{ $json.email_ufficio }}",
            "tempi_gestione": "={{ $json.tempi_gestione }}",
            "documenti_richiesti": "={{ $json.documenti_richiesti }}",
            "risposta_cittadino": "={{ $json.risposta_cittadino }}",
            "numero_protocollo": "={{ $('Generazione protocollo1').item.json.numero_protocollo }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "cognome",
              "displayName": "cognome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "indirizzo",
              "displayName": "indirizzo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "canale",
              "displayName": "canale",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "data",
              "displayName": "data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "tipologia",
              "displayName": "tipologia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "oggetto",
              "displayName": "oggetto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "descrizione",
              "displayName": "descrizione",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "urgenza",
              "displayName": "urgenza",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "dati_catastali",
              "displayName": "dati_catastali",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "ufficio_competente",
              "displayName": "ufficio_competente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "priorita",
              "displayName": "priorita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefono_ufficio",
              "displayName": "telefono_ufficio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email_ufficio",
              "displayName": "email_ufficio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tempi_gestione",
              "displayName": "tempi_gestione",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "numero_protocollo",
              "displayName": "numero_protocollo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "documenti_richiesti",
              "displayName": "documenti_richiesti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "risposta_cittadino",
              "displayName": "risposta_cittadino",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4128,
        320
      ],
      "id": "e2851a88-b156-4b02-afad-1f392bbe9301",
      "name": "Salva in Database",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -5408,
        400
      ],
      "id": "c5a55cc4-fa12-4065-a614-9163af7d0285",
      "name": "Ollama Chat Model3",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -6336,
        96
      ],
      "id": "5f59c906-8e00-497b-8cd4-c76ac454366f",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/bot7083883971:AAHzmWAHNlS9P3D93qEBT_AAwMqrSbCs80M/getUpdates?limit=1&offset=-1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6112,
        784
      ],
      "id": "f181ce45-9d4b-49da-b681-156466cd48f6",
      "name": "Leggi Ultimo Messaggio1"
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "={{ $json.email }}",
        "subject": "=Conferma Segnalazione al Comune di Magliano in Toscana - Rif. {{ $json.numero_protocollo }}",
        "html": "=<p>Gentile {{ $json.nome }} {{ $json.cognome }},</p>\n<p>{{ $json.risposta_cittadino }}</p>\n<p>Per ulteriori aggiornamenti, può fare riferimento al numero di protocollo <b>{{ $json.numero_protocollo }}</b> e contattare l'ufficio competente ai seguenti recapiti: {{ $json.ufficio_competente }} - {{ $json.contatto_ufficio }}.</p>\n<p>Cordiali saluti,<br>Comune di Magliano in Toscana</p>",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -3840,
        416
      ],
      "id": "b81f4a24-2501-41a4-9042-65dc48fe9d0b",
      "name": "Conferma al Cittadino1",
      "webhookId": "188464cc-56b4-4fa5-8589-240621d552b2",
      "credentials": {
        "smtp": {
          "id": "2Ev9y9tlQno3rjNP",
          "name": "SMTP account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "=Nuova Segnalazione: {{ $json.oggetto }}",
        "html": "=<p><b>Nuova Segnalazione Ricevuta</b></p>\n<ul>\n  <li><b>Nome:</b> {{ $json.nome }} {{ $json.cognome }}</li>\n  <li><b>Contatto:</b> {{ $json.telefono }} / {{ $json.email }} (Canale: {{ $json.canale }})</li>\n  <li><b>Data:</b> {{ $json.data }}</li>\n  <li><b>Luogo:</b> {{ $json.indirizzo }}</li>\n  <li><b>Tipologia:</b> {{ $json.tipologia }}</li>\n  <li><b>Oggetto:</b> {{ $json.oggetto }}</li>\n  <li><b>Descrizione:</b> {{ $json.descrizione }}</li>\n  <li><b>Urgenza:</b> {{ $json.urgenza }}</li>\n  <li><b>Assegnato a:</b> {{ $json.operatore }}</li>\n</ul>\n<p><b>Note Interne:</b> {{ $json.note_interne }}</p>",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -3840,
        224
      ],
      "id": "07b6c8ae-921e-48fe-a731-49bed1054c29",
      "name": "Notifica Interna all'Ufficio1",
      "webhookId": "dff3a31d-5ffd-46a6-a7d5-13163f3092c0",
      "credentials": {
        "smtp": {
          "id": "2Ev9y9tlQno3rjNP",
          "name": "SMTP account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE protocollo_counter\nSET ultimo_numero = ultimo_numero + 1\nWHERE anno = EXTRACT(YEAR FROM CURRENT_DATE)\nRETURNING ultimo_numero;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5152,
        176
      ],
      "id": "a92d4aec-bb85-407b-85ca-4d76d669dbfe",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Recupera l'ultimo numero dal nodo precedente (Postgres \"Ottieni Protocollo\")\nconst numero = $json.ultimo_numero;\nconst anno = new Date().getFullYear();\n\n// Costruisci il protocollo con zeri iniziali (es: MAGL-2025-0001)\nconst protocollo = `MAGL-${anno}-${String(numero).padStart(4, '0')}`;\n\n// Ritorna i dati originali + nuovo campo numero_protocollo\nreturn [{\n  json: {\n    ...$json,\n    numero_protocollo: protocollo\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4864,
        176
      ],
      "id": "88828c51-d820-44e3-8c65-b7502da1d9f5",
      "name": "Generazione protocollo1"
    },
    {
      "parameters": {
        "jsCode": "// La funzione accetta un array di elementi, in questo caso uno solo\nfor (const item of items) {\n  \n  // Accedi ai campi specifici dall'oggetto di input\n  const oggetto = item.json.oggetto || 'Segnalazione generica';\n  const descrizione = item.json.descrizione || 'Descrizione non disponibile';\n  const rispostaCittadino = item.json.risposta_cittadino || 'Risposta standard';\n  const numeroProtocollo = item.json.numero_protocollo || 'N/A';\n  const tipologia = item.json.tipologia || 'Lavori Pubblici';\n  const urgenza = item.json.urgenza || 'Media';\n  const indirizzo = item.json.indirizzo || 'Da definire';\n  \n  // Concatena i campi in un'unica stringa leggibile\n  const testoCompleto = `Protocollo: ${numeroProtocollo}. Tipologia: ${tipologia}. Oggetto: ${oggetto}. Descrizione: ${descrizione}. Luogo: ${indirizzo}. Urgenza: ${urgenza}. Risposta al cittadino: ${rispostaCittadino}.`;\n  \n  // Crea un nuovo oggetto con la chiave 'text' e la stringa combinata\n  const jsonlOutput = {\n    text: testoCompleto\n  };\n  \n  // Sostituisci il vecchio item con il nuovo oggetto JSONL\n  item.json = jsonlOutput;\n}\n\n// Restituisci l'array di elementi modificato, pronto per l'output\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4416,
        16
      ],
      "id": "9f8d5258-c619-4395-a249-6c5afd634396",
      "name": "Testo per embedding1"
    },
    {
      "parameters": {
        "jsCode": "// Formattazione email con gestione problemi già noti\nconst all = $input.all();\nconsole.log('Input ricevuto dall\\'AI Agent:', JSON.stringify(all, null, 2));\n\nif (all.length === 0) {\n  return [{\n    json: {\n      resoconto_mail: \"<p><i>❌ Nessuna segnalazione trovata per i criteri specificati.</i></p>\",\n      count: 0,\n      hasResults: false\n    }\n  }];\n}\n\nconst aiOutput = all[0].json.output || all[0].json.text || '';\nconsole.log('Testo dall\\'AI da formattare:', aiOutput);\n\nif (aiOutput.toLowerCase().includes('nessuna segnalazione')) {\n  return [{\n    json: {\n      resoconto_mail: \"<p><i>❌ Nessuna segnalazione trovata per i criteri specificati.</i></p>\",\n      count: 0,\n      hasResults: false\n    }\n  }];\n}\n\n// Rileva se il problema è già noto\nconst problemaGiaSegnalato = aiOutput.toLowerCase().includes('problema_gia_segnalato: si') ||\n                            aiOutput.toLowerCase().includes('numero_segnalazioni_precedenti');\n\nlet htmlFormatted = '';\nlet segnalazioniCount = 0;\nlet problemaNottoInfo = {};\n\n// Estrai informazioni sul problema già noto\nif (problemaGiaSegnalato) {\n  const numeroMatch = aiOutput.match(/NUMERO_SEGNALAZIONI_PRECEDENTI:\\s*([^\\n]+)/i);\n  const primoMatch = aiOutput.match(/PRIMO_RILEVAMENTO:\\s*([^\\n]+)/i);\n  const ufficioMatch = aiOutput.match(/UFFICIO_COMPETENTE:\\s*([^\\n]+)/i);\n  const statoMatch = aiOutput.match(/STATO_INTERVENTO:\\s*([^\\n]+)/i);\n  const soluzioniMatch = aiOutput.match(/SOLUZIONI_ADOTTATE:\\s*([^\\n]+)/i);\n  const prossimiMatch = aiOutput.match(/PROSSIMI_PASSI:\\s*([^\\n]+)/i);\n  const comunicazioneMatch = aiOutput.match(/COMUNICAZIONE_CITTADINO:\\s*([^\\n]+)/i);\n  \n  problemaNottoInfo = {\n    numeroSegnalazioni: numeroMatch ? numeroMatch[1].trim() : '',\n    primoRilevamento: primoMatch ? primoMatch[1].trim() : '',\n    ufficioCompetente: ufficioMatch ? ufficioMatch[1].trim() : 'Settore Tecnico',\n    statoIntervento: statoMatch ? statoMatch[1].trim() : '',\n    soluzioniAdottate: soluzioniMatch ? soluzioniMatch[1].trim() : '',\n    prossimiPassi: prossimiMatch ? prossimiMatch[1].trim() : '',\n    comunicazione: comunicazioneMatch ? comunicazioneMatch[1].trim() : ''\n  };\n}\n\n// Splitta il testo in paragrafi\nconst paragraphs = aiOutput.split('\\n\\n').filter(p => p.trim());\n\nfor (const paragraph of paragraphs) {\n  const cleanParagraph = paragraph.trim();\n  \n  // Se contiene segnalazione\n  if (cleanParagraph.toLowerCase().includes('segnalazione') && \n      !cleanParagraph.toLowerCase().includes('problema_gia_segnalato')) {\n    segnalazioniCount++;\n    \n    const lines = cleanParagraph.split('\\n').map(line => line.trim()).filter(line => line);\n    \n    htmlFormatted += `\n    <div style=\"margin-bottom: 20px; padding: 15px; border-left: 4px solid #007bff; background: #f8f9fa; border-radius: 5px;\">\n      <h4 style=\"color: #007bff; margin-top: 0;\">🎯 ${lines[0]}</h4>\n    `;\n    \n    // Formatta le righe successive con nuovi campi\n    for (let i = 1; i < lines.length; i++) {\n      const line = lines[i];\n      \n      if (line.toLowerCase().startsWith('oggetto:')) {\n        htmlFormatted += `<p><strong>📋 ${line}</strong></p>`;\n      } else if (line.toLowerCase().startsWith('descrizione:')) {\n        htmlFormatted += `<p><strong>📝 ${line}</strong></p>`;\n      } else if (line.toLowerCase().startsWith('stato:')) {\n        const stato = line.substring(6).trim();\n        const color = stato.toLowerCase().includes('completat') ? '#28a745' : \n                     stato.toLowerCase().includes('lavorazione') || stato.toLowerCase().includes('corso') ? '#ffc107' : '#dc3545';\n        htmlFormatted += `<p><strong>📊 Stato:</strong> <span style=\"padding: 3px 8px; border-radius: 3px; color: white; background: ${color}\">${stato}</span></p>`;\n      } else if (line.toLowerCase().startsWith('data:')) {\n        htmlFormatted += `<p><strong>📅 ${line}</strong></p>`;\n      } else if (line.toLowerCase().startsWith('luogo:') || line.toLowerCase().startsWith('indirizzo:')) {\n        htmlFormatted += `<p><strong>📍 ${line}</strong></p>`;\n      } else if (line.toLowerCase().startsWith('segnalatore:')) {\n        htmlFormatted += `<p><strong>👤 ${line}</strong></p>`;\n      } else if (line.toLowerCase().startsWith('ufficio_competente:')) {\n        const ufficio = line.substring('ufficio_competente:'.length).trim();\n        htmlFormatted += `<p><strong>🏢 Ufficio competente:</strong> <span style=\"background: #e3f2fd; padding: 2px 6px; border-radius: 3px;\">${ufficio}</span></p>`;\n      } else if (line.toLowerCase().startsWith('azioni_intraprese:')) {\n        const azioni = line.substring('azioni_intraprese:'.length).trim();\n        htmlFormatted += `<p><strong>⚡ Azioni intraprese:</strong> ${azioni}</p>`;\n      } else if (line.length > 5) {\n        htmlFormatted += `<p>${line}</p>`;\n      }\n    }\n    \n    htmlFormatted += `</div>`;\n  }\n  // Altri paragrafi importanti (escludi i metadati)\n  else if (cleanParagraph.length > 20 && \n           !cleanParagraph.toLowerCase().includes('problema_gia_segnalato') &&\n           !cleanParagraph.toLowerCase().includes('numero_segnalazioni') &&\n           !cleanParagraph.toLowerCase().includes('ufficio_competente') &&\n           !cleanParagraph.toLowerCase().includes('comunicazione_cittadino')) {\n    htmlFormatted += `<p style=\"margin-bottom: 10px;\">${cleanParagraph.replace(/\\n/g, '<br>')}</p>`;\n  }\n}\n\n// Se non abbiamo trovato segnalazioni strutturate\nif (segnalazioniCount === 0 && aiOutput.length > 10) {\n  htmlFormatted = `\n    <div style=\"padding: 15px; background: #e9ecef; border-radius: 5px;\">\n      <h4>📄 Risultati della ricerca:</h4>\n      <div style=\"white-space: pre-line; line-height: 1.6;\">${aiOutput}</div>\n    </div>\n  `;\n  segnalazioniCount = 1;\n}\n\n// Header principale\nlet headerHtml = `<h3 style=\"color: #007bff;\">📊 Analisi: ${segnalazioniCount} elemento/i trovato/i</h3>`;\n\n// Box problema già noto/gestito\nif (problemaGiaSegnalato) {\n  headerHtml += `\n  <div style=\"background: linear-gradient(135deg, #28a745, #20c997); color: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\n    <h4 style=\"margin-top: 0; display: flex; align-items: center; color: white;\">\n      <span style=\"font-size: 24px; margin-right: 10px;\">✅</span>\n      PROBLEMA GIÀ NOTO E IN GESTIONE\n    </h4>\n    <div style=\"background: rgba(255,255,255,0.2); padding: 15px; border-radius: 5px; margin-top: 15px;\">\n      ${problemaNottoInfo.numeroSegnalazioni ? `<p><strong>📈 Segnalazioni precedenti:</strong> ${problemaNottoInfo.numeroSegnalazioni}</p>` : ''}\n      ${problemaNottoInfo.primoRilevamento ? `<p><strong>📅 Primo rilevamento:</strong> ${problemaNottoInfo.primoRilevamento}</p>` : ''}\n      <p><strong>🏢 Ufficio responsabile:</strong> ${problemaNottoInfo.ufficioCompetente}</p>\n      ${problemaNottoInfo.statoIntervento ? `<p><strong>⚙️ Stato intervento:</strong> ${problemaNottoInfo.statoIntervento}</p>` : ''}\n      ${problemaNottoInfo.soluzioniAdottate ? `<p><strong>🔧 Soluzioni adottate:</strong> ${problemaNottoInfo.soluzioniAdottate}</p>` : ''}\n      ${problemaNottoInfo.prossimiPassi ? `<p><strong>➡️ Prossimi passi:</strong> ${problemaNottoInfo.prossimiPassi}</p>` : ''}\n    </div>\n    ${problemaNottoInfo.comunicazione ? `\n    <div style=\"background: rgba(255,255,255,0.3); padding: 12px; border-radius: 5px; margin-top: 10px; border-left: 4px solid white;\">\n      <strong>💬 Comunicazione:</strong> ${problemaNottoInfo.comunicazione}\n    </div>` : ''}\n  </div>`;\n}\n\nheaderHtml += '<hr>';\n\nconst finalHtml = headerHtml + htmlFormatted;\n\n// Footer con rassicurazioni per problemi noti\nif (problemaGiaSegnalato) {\n  const footerHtml = `\n  <hr>\n  <div style=\"background: #d4edda; padding: 15px; border-radius: 5px; margin-top: 20px; border-left: 4px solid #28a745;\">\n    <h5 style=\"color: #155724; margin-top: 0;\">🏛️ MESSAGGIO DELL'AMMINISTRAZIONE:</h5>\n    <p style=\"color: #155724; margin-bottom: 10px; font-size: 16px; line-height: 1.5;\">\n      <strong>L'amministrazione comunale conferma di essere a conoscenza del problema segnalato e di averlo già preso in carico.</strong>\n    </p>\n    <div style=\"background: rgba(21, 87, 36, 0.1); padding: 10px; border-radius: 3px;\">\n      <p style=\"color: #155724; margin: 0; font-style: italic;\">\n        \"Ringraziamo i cittadini per le segnalazioni ricevute. Il nostro impegno è quello di garantire trasparenza e tempestività negli interventi per il benessere della comunità.\"\n      </p>\n    </div>\n    <p style=\"color: #155724; margin-top: 10px; margin-bottom: 0; font-size: 14px;\">\n      <strong>Per aggiornamenti:</strong> È possibile contattare il ${problemaNottoInfo.ufficioCompetente} per informazioni sullo stato di avanzamento.\n    </p>\n  </div>`;\n  \n  const finalHtmlWithFooter = finalHtml + footerHtml;\n  \n  console.log('HTML con problema già noto generato:', finalHtmlWithFooter);\n  \n  return [{\n    json: {\n      resoconto_mail: finalHtmlWithFooter,\n      count: segnalazioniCount,\n      hasResults: segnalazioniCount > 0,\n      problemaGiaNoto: true,\n      ufficioCompetente: problemaNottoInfo.ufficioCompetente,\n      statoIntervento: problemaNottoInfo.statoIntervento\n    }\n  }];\n}\n\nconsole.log('HTML generato:', finalHtml);\n\nreturn [{\n  json: {\n    resoconto_mail: finalHtml,\n    count: segnalazioniCount,\n    hasResults: segnalazioniCount > 0,\n    problemaGiaNoto: false\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5104,
        736
      ],
      "id": "de0ff369-3ef9-45aa-b17d-69f7b7ca50c2",
      "name": "Elabora Risultati1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5525090b-0522-4c7b-8513-f2873f93ae4f",
              "leftValue": "={{ $json.hasResults }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4880,
        768
      ],
      "id": "0faf478f-fa48-4af5-8505-b181c2ae042a",
      "name": "Verifica Risultati1"
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "📋 Ricerca Segnalazioni - Nessun Risultato",
        "html": "=<h3>Ricerca Segnalazioni</h3>\n<p><strong>Query:</strong> {{ $('When chat message received').item.json.chatInput }}</p>\n<hr>\n{{ $json.resoconto_mail }}\n<p><small>Sistema di gestione segnalazioni - Comune di Magliano in Toscana</small></p>",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -4656,
        672
      ],
      "id": "380c6312-81c6-46bb-963b-9df5ac9740c4",
      "name": "Email Nessun Risultato1",
      "webhookId": "302e1587-c028-4b17-a93c-5608b3851c25",
      "credentials": {
        "smtp": {
          "id": "2Ev9y9tlQno3rjNP",
          "name": "SMTP account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "=📊 Ricerca Segnalazioni - {{ $json.count }} risultati",
        "html": "=<h3>Ricerca Segnalazioni</h3>\n<p><strong>Query:</strong> {{ $('When chat message received').item.json.chatInput }}</p>\n<hr>\n{{ $json.resoconto_mail }}\n<hr>\n<p><small>Sistema di gestione segnalazioni - Comune di Magliano in Toscana</small></p>",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -4656,
        976
      ],
      "id": "03a98892-ab5a-4b1a-9a4d-c9b446e8a2f2",
      "name": "Email Con Risultati1",
      "webhookId": "ad3f392d-047b-45d9-8384-5c5deccaa367",
      "credentials": {
        "smtp": {
          "id": "2Ev9y9tlQno3rjNP",
          "name": "SMTP account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {
          "temperature": 0.1,
          "topK": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -5456,
        1568
      ],
      "id": "5cb216e3-d41d-4098-beb9-b2f649db6baa",
      "name": "Ollama Chat Model5",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -5488,
        960
      ],
      "id": "117ca18e-b752-4223-9dcf-675be0e7a652",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "protocollo_segnalazione",
              "description": "protocollo_segnalazione"
            },
            {
              "name": "stato_segnalazione",
              "description": "stato_segnalazione"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -4896,
        1552
      ],
      "id": "7df1389f-658b-4d3b-b742-b68d3c566d89",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        -4832,
        1776
      ],
      "id": "895c87ba-3f63-49d3-b849-5d10062a8509",
      "name": "Ollama Model1",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "segnalazioni",
          "mode": "list",
          "cachedResultName": "segnalazioni"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "stato": "={{ $json.output.stato_segnalazione }}",
            "numero_protocollo": "={{ $json.output.protocollo_segnalazione }}"
          },
          "matchingColumns": [
            "numero_protocollo"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "cognome",
              "displayName": "cognome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "indirizzo",
              "displayName": "indirizzo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "canale",
              "displayName": "canale",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "data",
              "displayName": "data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tipologia",
              "displayName": "tipologia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "oggetto",
              "displayName": "oggetto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "descrizione",
              "displayName": "descrizione",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "urgenza",
              "displayName": "urgenza",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "dati_catastali",
              "displayName": "dati_catastali",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ufficio_competente",
              "displayName": "ufficio_competente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "priorita",
              "displayName": "priorita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefono_ufficio",
              "displayName": "telefono_ufficio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_ufficio",
              "displayName": "email_ufficio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tempi_gestione",
              "displayName": "tempi_gestione",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "numero_protocollo",
              "displayName": "numero_protocollo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "documenti_richiesti",
              "displayName": "documenti_richiesti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "risposta_cittadino",
              "displayName": "risposta_cittadino",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "stato",
              "displayName": "stato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4544,
        1552
      ],
      "id": "479a8e21-8f5f-44dc-b6c9-17aa1d04f492",
      "name": "Update rows in a table",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "=Segnalazione prot. {{ $json.numero_protocollo }} ({{ $json.oggetto }}) - Stato {{ $json.stato }}",
        "html": "={{ $json.descrizione }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -4320,
        1552
      ],
      "id": "2acc042d-842c-438a-8713-4a2a4ccc8870",
      "name": "Email Con Risultati",
      "webhookId": "ad3f392d-047b-45d9-8384-5c5deccaa367",
      "credentials": {
        "smtp": {
          "id": "2Ev9y9tlQno3rjNP",
          "name": "SMTP account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        -5840,
        144
      ],
      "id": "1859baab-4627-4346-b302-058f5dd3f978",
      "name": "Ollama Model2",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "=leggi {{ $json.chatInput }} e classifica la richiesta rispondendo:\nA) Richiesta informazioni su attività settore Tecnico;\nB) Richiesta informazioni su segnalazione;\nC) Richiesta inserimento segnalazione\nD) Comunicazione modifica segnalazione\n",
        "categories": {
          "categories": [
            {
              "category": "Richiesta informazioni su attività settore Tecnico",
              "description": "Richiesta informazioni su attività settore Tecnico"
            },
            {
              "category": "Richiesta informazioni su segnalazione",
              "description": "Richiesta informazioni su segnalazione"
            },
            {
              "category": "Comunicazione inserimento segnalazione",
              "description": "Comunicazione inserimento segnalazione"
            },
            {
              "category": "Comunicazione modifica segnalazione",
              "description": "Comunicazione modifica segnalazione"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -5920,
        -80
      ],
      "id": "50636e0a-edf3-424e-af3b-6be7e18b12d7",
      "name": "Smistatore iniziale"
    },
    {
      "parameters": {
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -5312,
        -304
      ],
      "id": "ce1694b9-4b0c-47ed-9451-6b89c7a02321",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -5440,
        -304
      ],
      "id": "7f94106d-1e73-4b40-91fb-c6e3d85e3ab5",
      "name": "Ollama Chat Model1",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "magliano.settoretecnico@gmail.com",
        "toEmail": "magliano.settoretecnico@gmail.com",
        "subject": "=info e contatti ",
        "emailFormat": "text",
        "text": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -5072,
        -528
      ],
      "id": "b078d9db-1155-4445-a0fc-54e1a9d69f59",
      "name": "Email Con Risultati2",
      "webhookId": "ad3f392d-047b-45d9-8384-5c5deccaa367",
      "credentials": {
        "smtp": {
          "id": "2Ev9y9tlQno3rjNP",
          "name": "SMTP account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un assistente del Settore Tecnico del Comune di Magliano in Toscana. Il tuo ruolo è indirizzare cittadini e professionisti all'ufficio corretto.\n\nIstruzioni operative:\nRispondi basandoti ESCLUSIVAMENTE sui dati disponibili su PostgreSQL1.\n\nNon inventare, non aggiungere o non ipotizzare alcuna informazione che non sia presente nel database. Se un dato non è disponibile, devi indicare chiaramente che non hai quell'informazione.\n\nUtilizza la domanda dell'utente contenuta in {{ $json.chatInput }} per identificare il dipendente assegnato in base ai dati del database PostgreSQL1. \n\nSe la domanda non è chiara o mancano i dati per una risposta precisa, chiedi all'utente di fornire maggiori dettagli.\n\nIndica che gli orari di apertura degli uffici si applicano a tutti i servizi del Settore Tecnico.\n\nPer questioni complesse che richiedono più uffici, indirizza l'utente al responsabile del Settore Tecnico (leonardo.bartoli@comune.maglianointoscana.gr.it)",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -5392,
        -528
      ],
      "id": "a72da9a3-fe09-472f-bcf9-c44e6d5ccbd2",
      "name": "Informazioni generali"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_vectors",
          "mode": "list",
          "cachedResultName": "n8n_vectors"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -6096,
        1056
      ],
      "id": "1ecf7ae1-b7a9-43cd-b89e-f3237e3d85b5",
      "name": "Salva in Database1",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "embeddingBatchSize": 2000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [
        -4192,
        -80
      ],
      "id": "d9d38e24-55b9-416e-a123-c177e47d4a05",
      "name": "Postgres PGVector Store",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "nomic-embed-text:v1.5"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -4192,
        144
      ],
      "id": "1255e06d-8885-4870-a8e1-12566e5eaa51",
      "name": "Embeddings Ollama1",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.text }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "protocollo",
                "value": "={{ $('Generazione protocollo1').item.json.numero_protocollo }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -4064,
        144
      ],
      "id": "26b789cd-8227-47a7-bd24-a93aa51b16a7",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Postgres PGVector Store1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [
        -5328,
        1568
      ],
      "id": "91d05f59-3bf9-4462-90e6-b66a74c328cc",
      "name": "Postgres PGVector Store2",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "nomic-embed-text:v1.5"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -5248,
        1776
      ],
      "id": "c87a3467-ab5c-43c4-a0ad-47bef98ad7cc",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "=settore_tecnico_uffici",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        -5184,
        -304
      ],
      "id": "fb637c33-82c1-4434-aba6-675371ebabaf",
      "name": "PostgreSQL1",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "Informazioni sugli uffici (apertura, personale assegnato, attività, ecc..)",
        "height": 464,
        "width": 720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5552,
        -624
      ],
      "typeVersion": 1,
      "id": "1be43fb2-02f9-45f3-9933-0aa529f82fcc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -6432,
        -432
      ],
      "id": "e01c67c5-a056-4cd8-bd9a-996cc8de5d65",
      "name": "When chat message received",
      "webhookId": "d87ea950-d18f-470a-9fe6-200c48028cee"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un assistente specializzato nella ricerca di segnalazioni. Il tuo compito è rispondere alle richieste dell'utente cercando in \"Vectors\".\n\nIstruzioni:\n1.  **Analizza** la richiesta dell'utente.\n2.  **Cerca** la segnalazione più pertinente in \"Vectors\".\n3.  **Fornisci** la risposta in un formato pulito e leggibile.\n4.  **Consulta SEMPRE in \"Segnalazioni\" e \"Vectors\" prima di rispondere\n\nIl tuo output DEVE contenere:\n- L'oggetto della segnalazione.\n- Un riassunto della sua descrizione.\n- Le attività intraprese.\n\nRichiesta dell'utente: {{ $json.chatInput }}\n\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -5424,
        736
      ],
      "id": "36a811e7-e0f0-4f88-8daa-74be7e920080",
      "name": "Ricerca segnalazioni"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un assistente specializzato nella ricerca di segnalazioni. Il tuo compito è rispondere alle richieste dell'utente cercando in \"Vectors\".\n\nIstruzioni:\n1.  **Analizza** la richiesta dell'utente.\n2.  **Cerca** la segnalazione più pertinente in \"Vectors\".\n3.  **Fornisci** la risposta in un formato pulito e leggibile.\n4.  **Consulta SEMPRE in \"Segnalazioni\" e \"Vectors\" prima di rispondere\n\nIl tuo output DEVE contenere:\n- L'oggetto della segnalazione.\n- Un riassunto della sua descrizione.\n- Le attività intraprese.\n\nRichiesta dell'utente: {{ $json.chatInput }}\n\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -5424,
        1344
      ],
      "id": "246d891c-e1d6-4a33-ab1b-30d587a2be1c",
      "name": "Modifica segnalazioni"
    },
    {
      "parameters": {
        "content": "Ricerca segnalazioni inserite",
        "height": 576,
        "width": 1120,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5552,
        656
      ],
      "typeVersion": 1,
      "id": "2c126e65-928a-4a70-8663-5d2c08bdf55e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analizza la seguente segnalazione ed estrai le informazioni strutturate in formato JSON. Usa i valori predefiniti se un dato manca.\n\n**SEGNALAZIONE:**\n{{ $json.chatInput }}\n\n**REGOLE DI ESTRAZIONE E VALORI PREDEFINITI:**\n- **Nome**: \"Non specificato\"\n- **Cognome**: \"Non specificato\"\n- **Telefono**: \"Non specificato\"\n- **Email**: \"Non specificato\"\n- **Indirizzo**: \"Da definire\"\n- **Canale**: \"Non specificato\"\n- **Data**: Data odierna Oggi è il {{ new Date().toLocaleDateString('it-IT') }}, Ore {{ new Date().toLocaleTimeString('it-IT') }}\n- **Tipologia**: \"Da specificare\" (scegli tra: Lavori Pubblici, Patrimonio, Edilizia Privata, Paesaggistico, Ambiente, Urbanistica, Protezione Civile)\n- **Oggetto**: Titolo sintetico del problema.\n- **Descrizione**: Dettagli completi del problema.\n- **Urgenza**: \"Media\" (scegli tra: Alta, Media, Bassa)\n- **Dati catastali**: null\n- **Ufficio competente**: Basato sulla tipologia, se non specificato usa \"Lavori Pubblici\".\n- **Priorita**: \"Media\" (scegli tra: Alta, Media, Bassa)\n- **Telefono ufficio**: \"0564 593439\"\n- **Email ufficio**: \"tecnico@comune.maglianointoscana.gr.it\"\n- **Tempi gestione**: \"5-7 giorni lavorativi\"\n- **Numero protocollo**: \"MAGL-2024-XXXX\"\n- **Documenti richiesti**: \"Da verificare\"\n- **Risposta cittadino**: Risposta personalizzata al cittadino.\n- **Note interne**: Attività previste per il personale.\n\n**RISPOSTA JSON (OBBLIGATORIO):**\n```json\n{\n  \"nome\": \"valore\",\n  \"cognome\": \"valore\",\n  \"telefono\": \"valore\", \n  \"email\": \"valore\",\n  \"indirizzo\": \"valore\",\n  \"canale\": \"valore\",\n  \"data\": \"YYYY-MM-DD\",\n  \"tipologia\": \"valore\",\n  \"oggetto\": \"valore\",\n  \"descrizione\": \"valore\",\n  \"urgenza\": \"valore\",\n  \"dati_catastali\": \"valore\",\n  \"ufficio_competente\": \"valore\",\n  \"priorita\": \"valore\",\n  \"telefono_ufficio\": \"valore\",\n  \"email_ufficio\": \"valore\",\n  \"tempi_gestione\": \"valore\",\n  \"numero_protocollo\": \"valore\",\n  \"documenti_richiesti\": \"valore\",\n  \"risposta_cittadino\": \"valore\",\n  \"note_interne\": \"valore\"\n}\n```\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -5488,
        176
      ],
      "id": "1c8a6a48-eb1a-46ea-9bd6-5d75bd3105e9",
      "name": "Inserimento richieste"
    },
    {
      "parameters": {
        "content": "Inserimento segnalazioni o comunicazioni",
        "height": 720,
        "width": 1936,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5552,
        -112
      ],
      "typeVersion": 1,
      "id": "bccf4bc6-e33b-4bfd-86de-bce1fd89157b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "model": "nomic-embed-text:v1.5"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -5120,
        1088
      ],
      "id": "991da3d9-ca54-485c-b4d0-d20b48f41589",
      "name": "Embeddings Ollama2",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Database segnalazioni settore Tecnico",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [
        -5136,
        928
      ],
      "id": "0ce4c30b-b381-4563-8dcf-96e45b6de082",
      "name": "Vectors",
      "credentials": {
        "postgres": {
          "id": "LCpZD9DBViVjwmM6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -6496,
        496
      ],
      "id": "dfe513cb-c1ea-48ed-8426-a66796e3320a",
      "name": "Modello Linguistico",
      "credentials": {
        "ollamaApi": {
          "id": "8OMWvqHyP2rNSFWy",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -6368,
        496
      ],
      "id": "23d4be14-a53b-4d18-9e23-e0f3680f44a1",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sei un agente IA per il Comune di Magliano in Toscana. Genera UNA SOLA richiesta casuale tra le seguenti tipologie. Occasionalmente, ometti uno o più campi (es. telefono, email, indirizzo) per simulare dati incompleti. Leggi la memoria per evitare di inserire dati già presenti\n\n**TIPOLOGIE DISPONIBILI:**\n1. **Lavori Pubblici**: strade dissestate, illuminazione pubblica, verde pubblico, segnaletica\n2. **Patrimonio**: edifici comunali, scuole, cimiteri, impianti sportivi\n3. **Edilizia Privata**: richieste permesso costruire, SCIA, CILA, verifiche conformità\n4. **Paesaggistico**: autorizzazioni paesaggistiche, vincoli, alberi monumentali\n5. **Ambiente**: raccolta rifiuti, inquinamento, verde urbano\n6. **Urbanistica**: piani regolatori, zonizzazioni\n7. **Protezione Civile**: emergenze, sicurezza\n\n**GENERA:**\n- Nome e Cognome realistici italiani (diversi ogni volta, caria fra nomi maschili e famminili)\n- Telefono (formato: 3xx-xxxxxxx)\n- Email (nome.cognome@provider.it)\n- Canale: Telefono, Email, o WhatsApp\n- Data odierna (formato YYYY-MM-DD oggi è )\n- Luogo specifico di Magliano in Toscana, Montiano o Pereta o zone aperte\n- Descrizione dettagliata del problema\n- Se Paesaggistico: aggiungi dati catastali (Foglio 1-84, Mappale 1-300)\n\n**ESEMPI LUOGHI:**\n- Via Roma, Via del Corso, Piazza Garibaldi\n- Frazione Pereta, Frazione Montiano, Sant Andrea, Poderoen Cà dei Frati, Cupi\n- Scuola Elementare, Cimiteri Comunali, sede comunale, \n- Parchi Pubblici, Campi Sportivi di Magliano in Toscana, Montiano e Pereta\n- Zome aperte\n\n**FORMATO RISPOSTA:**\nGenera una sola segnalazione dettagliata in linguaggio naturale.\nOggi è il {{ new Date().toLocaleDateString('it-IT') }}\nOre {{ new Date().toLocaleTimeString('it-IT') }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -6512,
        272
      ],
      "id": "7eca7d90-4e75-4d98-bc04-fc0a4648f4b0",
      "name": "Generatore richieste informazioni"
    },
    {
      "parameters": {
        "content": "Generatori dati sintetici (richieste informazioni, segnalazioni, comunicazioni",
        "height": 1136,
        "width": 832,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6864,
        -496
      ],
      "typeVersion": 1,
      "id": "256ff6b7-02dc-4e26-a4a9-f3e1d5ae020a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "Inserimento segnalazioni o comunicazioni",
        "height": 720,
        "width": 1936,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5552,
        1264
      ],
      "typeVersion": 1,
      "id": "32be8298-250a-443d-8c42-de29c311a0c4",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "Merge Protocol Data": {
      "main": [
        [
          {
            "node": "Parse JSON & Valida Dati1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Protocol Data for Qdrant": {
      "main": [
        [
          {
            "node": "Testo per embedding1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modello Linguistico1": {
      "ai_languageModel": [
        [
          {
            "node": "Generatore Segnalazioni",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON & Valida Dati1": {
      "main": [
        [
          {
            "node": "Salva in Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generatore Segnalazioni": {
      "main": [
        []
      ]
    },
    "Salva in Database": {
      "main": [
        [
          {
            "node": "Notifica Interna all'Ufficio1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Conferma al Cittadino1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Inserimento richieste",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Generatore Segnalazioni",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Leggi Ultimo Messaggio1": {
      "main": [
        []
      ]
    },
    "Execute a SQL query1": {
      "main": [
        [
          {
            "node": "Generazione protocollo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generazione protocollo1": {
      "main": [
        [
          {
            "node": "Merge Protocol Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Protocol Data for Qdrant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Testo per embedding1": {
      "main": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Elabora Risultati1": {
      "main": [
        [
          {
            "node": "Verifica Risultati1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica Risultati1": {
      "main": [
        [
          {
            "node": "Email Nessun Risultato1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Email Con Risultati1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Modifica segnalazioni",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ricerca segnalazioni",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Update rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Update rows in a table": {
      "main": [
        [
          {
            "node": "Email Con Risultati",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Smistatore iniziale",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Smistatore iniziale": {
      "main": [
        [
          {
            "node": "Informazioni generali",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ricerca segnalazioni",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Inserimento richieste",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Modifica segnalazioni",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Informazioni generali",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Informazioni generali",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Informazioni generali": {
      "main": [
        [
          {
            "node": "Email Con Risultati2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Postgres PGVector Store2": {
      "ai_tool": [
        [
          {
            "node": "Modifica segnalazioni",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "PostgreSQL1": {
      "ai_tool": [
        [
          {
            "node": "Informazioni generali",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Smistatore iniziale",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ricerca segnalazioni": {
      "main": [
        [
          {
            "node": "Elabora Risultati1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modifica segnalazioni": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inserimento richieste": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama2": {
      "ai_embedding": [
        [
          {
            "node": "Vectors",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Vectors": {
      "ai_tool": [
        [
          {
            "node": "Ricerca segnalazioni",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Modello Linguistico": {
      "ai_languageModel": [
        [
          {
            "node": "Generatore richieste informazioni",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Generatore richieste informazioni",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Generatore richieste informazioni": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c35473ea-420c-4470-b0b6-c2ea470429df",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "17a62beb685cc8811ecccfdb526b06b45c844927e932786974e7e038d3390ffd"
  },
  "id": "Zzm5YnJ46IFRH2Bo",
  "tags": []
}